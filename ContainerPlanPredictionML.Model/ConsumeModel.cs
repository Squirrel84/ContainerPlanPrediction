// This file was auto-generated by ML.NET Model Builder. 

using System;
using Microsoft.ML;

namespace ContainerPlanPredictionML.Model
{
    public class ConsumeModel
    {
        private static string _directoryPath;
        private string _modelFilePath;

        public static ConsumeModel CurrentModel
        {
            get { return new ConsumeModel(_directoryPath); }
        }

        public ConsumeModel()
        { }

        public ConsumeModel(string modelFilePath)
        {
            _modelFilePath = modelFilePath;
        }

        public static void Initialise(string path)
        {
            _directoryPath = path;    
        }

        // For more info on consuming ML.NET models, visit https://aka.ms/model-builder-consume
        // Method for consuming model in your app
        public ModelOutput PredictBay(ModelInput input)
        {
            // Load model & create prediction engine
            string modelPath = _modelFilePath + "BayMLModel.zip";

            return Predict(modelPath, input);
        }

        public ModelOutput PredictRow(ModelInput input)
        {
            // Load model & create prediction engine
            string modelPath = _modelFilePath + "RowMLModel.zip";

            return Predict(modelPath, input);
        }

        private ModelOutput Predict(string modelPath, ModelInput input)
        {
            // Create new MLContext
            MLContext mlContext = new MLContext();

            ITransformer mlModel = mlContext.Model.Load(modelPath, out var modelInputSchema);
            var predEngine = mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);

            // Use model to make prediction on input data
            return predEngine.Predict(input);
        }
    }
}
